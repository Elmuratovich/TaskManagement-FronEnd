{"ast":null,"code":"var _jsxFileName = \"/home/makhmud/Desktop/NestJs/task-management/taskManagement-frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { TaskApi } from './api/task.api';\nimport { Grid } from '@mui/material';\nimport Task from './components/Task';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateTaskModal from './components/CreateTaskModal';\nimport EditTaskModal from './components/EditTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); //const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  const [createTaskModalOpen, setCreateTaskModalOpen] = useState(false);\n  const [updateTaskModalOpen, setUpdateTaskModalOpen] = useState(false);\n  const [taskBeingEdited, setTaskBeingEdited] = useState(undefined);\n\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(x => x.id !== taskId));\n  };\n\n  const updateTask = task => {\n    setTasks(tasks.map(x => {\n      if (x.id === task.id) return task;\n      return x;\n    }));\n  };\n\n  useEffect(() => {\n    async function fetchAll() {\n      const resp = await TaskApi.getAll();\n      setTasks(resp);\n    }\n\n    fetchAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      open: createTaskModalOpen,\n      handleClose: () => setCreateTaskModalOpen(false),\n      onTaskCreated: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      data: taskBeingEdited,\n      open: updateTaskModalOpen,\n      handleClose: () => setUpdateTaskModalOpen(false),\n      onTaskUpdate: updateTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            flexGrow: 1\n          },\n          children: \"Task Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setCreateTaskModalOpen(true),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      style: {\n        padding: 10\n      },\n      children: tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            data: task,\n            onTaskDelete: deleteTask,\n            onTaskUpdate: task => {\n              setTaskBeingEdited(task);\n              setUpdateTaskModalOpen(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mgBMOMzX/LaejtlAz/OUuo9WOhM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TaskApi","Grid","Task","AppBar","Toolbar","Typography","Button","CreateTaskModal","EditTaskModal","App","tasks","setTasks","createTaskModalOpen","setCreateTaskModalOpen","updateTaskModalOpen","setUpdateTaskModalOpen","taskBeingEdited","setTaskBeingEdited","undefined","addTask","task","deleteTask","taskId","filter","x","id","updateTask","map","fetchAll","resp","getAll","flexGrow","padding"],"sources":["/home/makhmud/Desktop/NestJs/task-management/taskManagement-frontend/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { TaskApi } from './api/task.api';\nimport { TaskDTO } from './api/dto/task.dto';\nimport { Grid } from '@mui/material';\nimport Task from './components/Task';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateTaskModal from './components/CreateTaskModal';\nimport EditTaskModal from './components/EditTaskModal';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState<TaskDTO[]>([]);\n  //const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [createTaskModalOpen, setCreateTaskModalOpen] = useState(false);\n  const [updateTaskModalOpen, setUpdateTaskModalOpen] = useState(false);\n  const [taskBeingEdited, setTaskBeingEdited] = useState<undefined | TaskDTO>(undefined)\n\n  const addTask = (task: TaskDTO) => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = (taskId: number) => {\n    setTasks(tasks.filter((x) => x.id !== taskId));\n  };\n\n  const updateTask = (task: TaskDTO) => {\n    setTasks(\n      tasks.map((x) => {\n        if (x.id === task.id) return task;\n        return x;\n      })\n    );\n  };\n\n  useEffect(() => {\n    async function fetchAll() {\n      const resp = await TaskApi.getAll();\n      setTasks(resp);\n    }\n    fetchAll();\n  }, [])\n  return (\n    <div className=\"App\">\n      <CreateTaskModal\n        open={createTaskModalOpen}\n        handleClose={() => setCreateTaskModalOpen(false)}\n        onTaskCreated={addTask}\n      />\n      <EditTaskModal\n        data={taskBeingEdited as TaskDTO}\n        open={updateTaskModalOpen}\n        handleClose={() => setUpdateTaskModalOpen(false)}\n        onTaskUpdate={updateTask}\n      />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Task Management\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setCreateTaskModalOpen(true)}\n          >\n            Create Task\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container spacing={1} style={{ padding: 10 }}>\n        {tasks.map((task) => {\n          return (\n            <Grid item xs={3}>\n              <Task\n                data={task}\n                onTaskDelete={deleteTask}\n                onTaskUpdate={(task: TaskDTO) => {\n                  setTaskBeingEdited(task);\n                  setUpdateTaskModalOpen(true)\n                }}\n              />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}