{"ast":null,"code":"var _jsxFileName = \"/home/makhmud/Desktop/NestJs/task-management/taskManagement-frontend/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { TaskApi } from './api/task.api';\nimport { Grid } from '@mui/material';\nimport Task from './components/Task';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateTaskModal from './components/CreateTaskModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); //const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  const [createTaskModalOpen, setCreateTaskModalOpen] = useState(false);\n\n  const addTask = task => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(x => x.id !== taskId));\n  };\n\n  useEffect(() => {\n    async function fetchAll() {\n      const resp = await TaskApi.getAll();\n      setTasks(resp);\n    }\n\n    fetchAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CreateTaskModal, {\n      open: createTaskModalOpen,\n      handleClose: () => setCreateTaskModalOpen(false),\n      onTaskCreated: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            flexGrow: 1\n          },\n          children: \"Task Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => setCreateTaskModalOpen(true),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      style: {\n        padding: 10\n      },\n      children: tasks.map(task => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            data: task,\n            onTaskDelete: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SymTHb31urm4q6ozbuBZozIGZcU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","TaskApi","Grid","Task","AppBar","Toolbar","Typography","Button","CreateTaskModal","App","tasks","setTasks","createTaskModalOpen","setCreateTaskModalOpen","addTask","task","deleteTask","taskId","filter","x","id","fetchAll","resp","getAll","flexGrow","padding","map"],"sources":["/home/makhmud/Desktop/NestJs/task-management/taskManagement-frontend/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport { TaskApi } from './api/task.api';\nimport { TaskDTO } from './api/dto/task.dto';\nimport { Grid } from '@mui/material';\nimport Task from './components/Task';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CreateTaskModal from './components/CreateTaskModal';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState<TaskDTO[]>([]);\n  //const [createModalOpen, setCreateModalOpen] = useState(false);\n  const [createTaskModalOpen, setCreateTaskModalOpen] = useState(false);\n\n  const addTask = (task: TaskDTO) => {\n    setTasks([...tasks, task]);\n  };\n\n  const deleteTask = (taskId: number) => {\n    setTasks(tasks.filter((x) => x.id !== taskId));\n  };\n\n  useEffect(() => {\n    async function fetchAll() {\n      const resp = await TaskApi.getAll();\n      setTasks(resp);\n    }\n    fetchAll();\n  }, [])\n  return (\n    <div className=\"App\">\n      <CreateTaskModal\n        open={createTaskModalOpen}\n        handleClose={() => setCreateTaskModalOpen(false)}\n        onTaskCreated={addTask}\n      />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Task Management\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setCreateTaskModalOpen(true)}\n          >\n            Create Task\n          </Button>\n        </Toolbar>\n      </AppBar>\n\n      <Grid container spacing={1} style={{ padding: 10 }}>\n        {tasks.map((task) => {\n          return (\n            <Grid item xs={3}>\n              <Task data={task} onTaskDelete />\n            </Grid>\n          );\n        })}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAY,EAAZ,CAAlC,CADa,CAEb;;EACA,MAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,KAAD,CAA9D;;EAEA,MAAMc,OAAO,GAAIC,IAAD,IAAmB;IACjCJ,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWK,IAAX,CAAD,CAAR;EACD,CAFD;;EAIA,MAAMC,UAAU,GAAIC,MAAD,IAAoB;IACrCN,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,MAA7B,CAAD,CAAR;EACD,CAFD;;EAIAlB,SAAS,CAAC,MAAM;IACd,eAAesB,QAAf,GAA0B;MACxB,MAAMC,IAAI,GAAG,MAAMrB,OAAO,CAACsB,MAAR,EAAnB;MACAZ,QAAQ,CAACW,IAAD,CAAR;IACD;;IACDD,QAAQ;EACT,CANQ,EAMN,EANM,CAAT;EAOA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,eAAD;MACE,IAAI,EAAET,mBADR;MAEE,WAAW,EAAE,MAAMC,sBAAsB,CAAC,KAAD,CAF3C;MAGE,aAAa,EAAEC;IAHjB;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,MAAD;MAAQ,QAAQ,EAAC,QAAjB;MAAA,uBACE,QAAC,OAAD;QAAA,wBACE,QAAC,UAAD;UAAY,OAAO,EAAC,IAApB;UAAyB,KAAK,EAAE;YAAEU,QAAQ,EAAE;UAAZ,CAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE,QAAC,MAAD;UACE,OAAO,EAAC,WADV;UAEE,KAAK,EAAC,SAFR;UAGE,OAAO,EAAE,MAAMX,sBAAsB,CAAC,IAAD,CAHvC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QANF,eAqBE,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAA4B,KAAK,EAAE;QAAEY,OAAO,EAAE;MAAX,CAAnC;MAAA,UACGf,KAAK,CAACgB,GAAN,CAAWX,IAAD,IAAU;QACnB,oBACE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,IAAD;YAAM,IAAI,EAAEA,IAAZ;YAAkB,YAAY;UAA9B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF;MAKD,CANA;IADH;MAAA;MAAA;MAAA;IAAA,QArBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GArDQN,G;;KAAAA,G;AAuDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}